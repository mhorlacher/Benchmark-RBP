gw = glob_wildcards('inputs/{DATASET}/{NAME}/fold-{FOLD}/{TYPE}.fold-{FOLD_2}.fasta')
# print(gw)


FOLDS = [0, ]
NEGATIVES = ['negative-1', 'negative-2']

rule ALL:
    input:
        expand(expand('processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/final.model', zip, DATASET=gw.DATASET, NAME=gw.NAME, allow_missing=True), FOLD=FOLDS, NTYPE=NEGATIVES),


def not_FOLD(fold):
    return list(set(gw.FOLD).difference({fold}))

rule RNAProt_compile_NEGATIVE_TRAIN:
    input:
        fasta = lambda wc: expand('inputs/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}.fold-{FOLD}.fasta', FOLD=not_FOLD(wc.FOLD), allow_missing=True),
    output:
        fasta = temp('processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/negative.train.fasta')
    shell:
        'cat {input.fasta} > {output.fasta}'

rule RNAProt_compile_POSITIVE_TRAIN:
    input:
        fasta = lambda wc: expand('inputs/{DATASET}/{NAME}/fold-{FOLD}/positive.fold-{FOLD}.fasta', FOLD=not_FOLD(wc.FOLD), allow_missing=True),
    output:
        fasta = temp('processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/positive.train.fasta')
    shell:
        'cat {input.fasta} > {output.fasta}'

rule RNAProt_prepare_data_unique_header:
    input:
        fasta = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/{NEG_POS}.train.fasta'
    output:
        fasta = temp('processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/{NEG_POS}.train.uniq-header.fasta')
    run:
        with open(output.fasta, 'w') as f_out, open(input.fasta) as f_in:
            for i, line in enumerate(f_in):
                if line[0] == '>':
                    print(f'{line.strip()}:{i}', file=f_out)
                else:
                    print(line.strip(), file=f_out)

rule RNAProt_prepare_data:
    input:
        positive = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/positive.train.uniq-header.fasta',
        negative = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/negative.train.uniq-header.fasta',
    output:
        positive = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/positives.fa',
        negative = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/negatives.fa',
    params:
        out_dir = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}'
    shell:
        """
        set +u
        source $HOME/.bashrc
        conda activate rnaprot
        set -u

        rnaprot gt --in {input.positive} --neg-in {input.negative} --out {params.out_dir} --report
        """
        # 'rnaprot gt --in {input.positive} --neg-in {input.negative} --out {params.out_dir} --report'

rule RNAProt_train:
    input:
        positive = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/positives.fa',
        negative = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/negatives.fa',
    output:
        model = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/final.model'
    params:
        out_dir = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}'
    shell:
        """
        ./train.RNAProt.sbatch.sh {params.out_dir}
        """

        # """
        # set +u
        # source $HOME/.bashrc
        # conda activate rnaprot
        # set -u

        # rnaprot train --in {params.out_dir} --out {params.out_dir} --verbose-train
        # """
        # 'train.RNAProt.sbatch.sh {params.out_dir}'
        #'rnaprot train --in {params.out_dir} --out {params.out_dir} --verbose-train'


