gw = glob_wildcards('models/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/GraphProt.model')
print('Number of models:', len(gw.NAME))
# exit()


# TYPES = ['positive', 'negative-1', 'negative-2']

rule ALL:
    input:
        expand('processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/result.csv', zip, DATASET=gw.DATASET, NAME=gw.NAME, FOLD=gw.FOLD, NTYPE=gw.NTYPE),
        'processed/results.GraphProt.csv',

rule GraphProt_predict:
    input:
        fasta = 'inputs/{DATASET}/{NAME}/fold-{FOLD}/{TYPE}.fold-{FOLD}.fasta',
        model = 'models/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/GraphProt.model',
    output:
        pred = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/{TYPE}.Graphprot.predictions'
    params:
        prefix = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/{TYPE}.Graphprot'
    shadow:
        'shallow'
    shell:
        './predict.GraphProt.sbatch.sh {input.fasta} {input.model} {params.prefix}'

        # """
        # set +u
        # source $HOME/.bashrc
        # conda activate graphprot
        # set -u

        # GraphProt.pl --action predict -fasta {input.fasta} -model {input.model} -prefix {params.prefix}
        # """

rule compile_result:
    input:
        predictions = lambda wc: expand(f'processed/{wc.DATASET}/{wc.NAME}/fold-{wc.FOLD}/{wc.NTYPE}/{{TYPE}}.Graphprot.predictions', TYPE=[wc.NTYPE, 'positive'])
    output:
        result_csv = 'processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/result.csv'
    params:
        DATASET = '{DATASET}',
        NAME = '{NAME}',
        FOLD = '{FOLD}',
        NTYPE = '{NTYPE}',
    run:
        with open(output.result_csv, 'w') as f_out:
            for pred in input.predictions:
                with open(pred) as f_in:
                    s_type = pred.split('/')[-1].split('.')[0]
                    for line in f_in:
                        sample, label, score = line.strip().split('\t')
                        print(','.join(['GraphProt', params.DATASET, params.NAME, params.FOLD, params.NTYPE, sample, score, s_type]), file=f_out)

rule aggregate_results:
    input:
        expand('processed/{DATASET}/{NAME}/fold-{FOLD}/{NTYPE}/result.csv', zip, DATASET=gw.DATASET, NAME=gw.NAME, FOLD=gw.FOLD, NTYPE=gw.NTYPE)
    output:
        'processed/results.GraphProt.csv'
    shell:
        'cat {input} > {output}'